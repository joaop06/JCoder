version: "3.8"

services:
  database:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_DOCKER_USER}
      POSTGRES_PASSWORD: ${DB_DOCKER_PASSWORD}
      POSTGRES_DB: ${DB_DOCKER_DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${DB_DOCKER_PORT}:5432" # host:container (container permanece 5432)
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${DB_DOCKER_USER} -d ${DB_DOCKER_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PORT: ${BACKEND_DOCKER_PORT}
      BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET}
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "${BACKEND_DOCKER_PORT}:${BACKEND_DOCKER_PORT}"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - API_URL=http://backend:${BACKEND_DOCKER_PORT}
    environment:
      - API_URL=http://backend:${BACKEND_DOCKER_PORT}
    depends_on:
      - backend
    ports:
      - "${FRONTEND_DOCKER_PORT}:80"

volumes:
  db_data:
